Index: Engine/tinyxml/tinyxml.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/tinyxml/tinyxml.cpp b/Engine/XmlParse/tinyxml.cpp
rename from Engine/tinyxml/tinyxml.cpp
rename to Engine/XmlParse/tinyxml.cpp
--- a/Engine/tinyxml/tinyxml.cpp	
+++ b/Engine/XmlParse/tinyxml.cpp	
@@ -1,5 +1,5 @@
 /*
-www.sourceforge.net/projects/tinyxml
+www.sourceforge.net/projects/XmlParse
 Original code by Lee Thomason (www.grinninglizard.com)
 
 This software is provided 'as-is', without any express or implied
@@ -967,7 +967,7 @@
 	TIXML_STRING filename( _filename );
 	value = filename;
 
-	// reading in binary mode so that tinyxml can normalize the EOL
+	// reading in binary mode so that XmlParse can normalize the EOL
 	FILE* file = TiXmlFOpen( value.c_str (), "rb" );	
 
 	if ( file )
Index: Engine/tinyxml/xml.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/tinyxml/xml.cpp b/Engine/XmlParse/xml.cpp
rename from Engine/tinyxml/xml.cpp
rename to Engine/XmlParse/xml.cpp
--- a/Engine/tinyxml/xml.cpp	
+++ b/Engine/XmlParse/xml.cpp	
@@ -18,6 +18,7 @@
             TiXmlElement * figure = scene->FirstChildElement( "model" );
             if (figure) {
                 printf("%s \n", figure->Attribute("file"));
+
             }
         }
 
Index: Engine/tinyxml/tinyxmlparser.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/tinyxml/tinyxmlparser.cpp b/Engine/XmlParse/tinyxmlparser.cpp
rename from Engine/tinyxml/tinyxmlparser.cpp
rename to Engine/XmlParse/tinyxmlparser.cpp
--- a/Engine/tinyxml/tinyxmlparser.cpp	
+++ b/Engine/XmlParse/tinyxmlparser.cpp	
@@ -1,5 +1,5 @@
 /*
-www.sourceforge.net/projects/tinyxml
+www.sourceforge.net/projects/XmlParse
 Original code by Lee Thomason (www.grinninglizard.com)
 
 This software is provided 'as-is', without any express or implied 
@@ -407,12 +407,12 @@
 	assert( p );
 
 	// Names start with letters or underscores.
-	// Of course, in unicode, tinyxml has no idea what a letter *is*. The
+	// Of course, in unicode, XmlParse has no idea what a letter *is*. The
 	// algorithm is generous.
 	//
 	// After that, they can be letters, underscores, numbers,
 	// hyphens, or colons. (Colons are valid ony for namespaces,
-	// but tinyxml can't tell namespaces from names.)
+	// but XmlParse can't tell namespaces from names.)
 	if (    p && *p 
 		 && ( IsAlpha( (unsigned char) *p, encoding ) || *p == '_' ) )
 	{
@@ -836,7 +836,7 @@
 	// - Elements start with a letter or underscore, but xml is reserved.
 	// - Comments: <!--
 	// - Decleration: <?xml
-	// - Everthing else is unknown to tinyxml.
+	// - Everthing else is unknown to XmlParse.
 	//
 
 	const char* xmlHeader = { "<?xml" };
Index: Engine/tinyxml/tinyxmlerror.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/tinyxml/tinyxmlerror.cpp b/Engine/XmlParse/tinyxmlerror.cpp
rename from Engine/tinyxml/tinyxmlerror.cpp
rename to Engine/XmlParse/tinyxmlerror.cpp
--- a/Engine/tinyxml/tinyxmlerror.cpp	
+++ b/Engine/XmlParse/tinyxmlerror.cpp	
@@ -1,5 +1,5 @@
 /*
-www.sourceforge.net/projects/tinyxml
+www.sourceforge.net/projects/XmlParse
 Original code (2.0 and earlier )copyright (c) 2000-2006 Lee Thomason (www.grinninglizard.com)
 
 This software is provided 'as-is', without any express or implied 
@@ -25,7 +25,7 @@
 #include "tinyxml.h"
 
 // The goal of the seperate error file is to make the first
-// step towards localization. tinyxml (currently) only supports
+// step towards localization. XmlParse (currently) only supports
 // english error messages, but the could now be translated.
 //
 // It also cleans up the code a bit.
Index: Engine/tinyxml/tinyxml.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/tinyxml/tinyxml.h b/Engine/XmlParse/tinyxml.h
rename from Engine/tinyxml/tinyxml.h
rename to Engine/XmlParse/tinyxml.h
--- a/Engine/tinyxml/tinyxml.h	
+++ b/Engine/XmlParse/tinyxml.h	
@@ -1,5 +1,5 @@
 /*
-www.sourceforge.net/projects/tinyxml
+www.sourceforge.net/projects/XmlParse
 Original code by Lee Thomason (www.grinninglizard.com)
 
 This software is provided 'as-is', without any express or implied
@@ -816,7 +816,7 @@
 	int				IntValue() const;									///< Return the value of this attribute, converted to an integer.
 	double			DoubleValue() const;								///< Return the value of this attribute, converted to a double.
 
-	// Get the tinyxml string representation
+	// Get the XmlParse string representation
 	const TIXML_STRING& NameTStr() const { return name; }
 
 	/** QueryIntValue examines the value string. It is an alternative to the
Index: Engine/tinyxml/tinystr.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/tinyxml/tinystr.cpp b/Engine/XmlParse/tinystr.cpp
rename from Engine/tinyxml/tinystr.cpp
rename to Engine/XmlParse/tinystr.cpp
--- a/Engine/tinyxml/tinystr.cpp	
+++ b/Engine/XmlParse/tinystr.cpp	
@@ -1,5 +1,5 @@
 /*
-www.sourceforge.net/projects/tinyxml
+www.sourceforge.net/projects/XmlParse
 
 This software is provided 'as-is', without any express or implied
 warranty. In no event will the authors be held liable for any
